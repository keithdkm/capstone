library("git2r", lib.loc="~/R/Capstone/packrat/lib/x86_64-w64-mingw32/3.2.1")
status()
blame(Capstone)
blame("Capstone")
stri_extract_all_words("the cat on the mat")
stri_extract_all_words("the cat on the mat")[[1]][1:2]
paste(stri_extract_all_words("the cat on the mat")[[1]][1:2])
paste(stri_extract_all_words("the cat on the mat")[[1]][1:2],collapse = " ")
is.na(NA)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the sailor rises")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
conf<-file("~/R/Capstone/Required Data/dirty.txt",'r')
profanity<-paste0("\\b",paste(readLines(conf),collapse = "|"),"\\b")
close(conf)
profanity
tagwords<-content_transformer(function(x,pattern, replacement) {gsub(pattern,
replacement,
x,
ignore.case = TRUE) })
tagwords<-function(x,pattern, replacement) {gsub(pattern,
replacement,
x,
ignore.case = TRUE) }
tagwords("gofuck yourself","\\b4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck |cocksucked |cocksucker|cocksucking|cocksucks |cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick |cuntlicker |cuntlicking |cunts|cyalis|cyberfuc|cyberfuck |cyberfucked |cyberfucker|cyberfuckers|cyberfucking |d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates |ejaculating |ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck |fingerfucked |fingerfucker |fingerfuckers|fingerfucking |fingerfucks |fistfuck|fistfucked |fistfucker |fistfuckers |fistfucking |fistfuckings |fistfucks |flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme |fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged |gangbangs |gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex |hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off |jackoff|jap|jerk-off |jism|jiz |jizm |jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i+ch|l3itch|lmfao|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked |mothafucker|mothafuckers|mothafuckin|mothafucking |mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers |nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim |orgasims |orgasm|orgasms |p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses |pissflaps|pissin |pissing|pissoff |poop|porn|porno|pornography|pornos|prick|pricks |pron|pube|pusse|pussi|pussies|pussy|pussys |rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters |shitting|shittings|shitty |skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx\\b", "<P>")
tagwords("gofuck yourself","\b4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck |cocksucked |cocksucker|cocksucking|cocksucks |cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick |cuntlicker |cuntlicking |cunts|cyalis|cyberfuc|cyberfuck |cyberfucked |cyberfucker|cyberfuckers|cyberfucking |d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates |ejaculating |ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck |fingerfucked |fingerfucker |fingerfuckers|fingerfucking |fingerfucks |fistfuck|fistfucked |fistfucker |fistfuckers |fistfucking |fistfuckings |fistfucks |flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme |fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged |gangbangs |gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex |hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off |jackoff|jap|jerk-off |jism|jiz |jizm |jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i+ch|l3itch|lmfao|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked |mothafucker|mothafuckers|mothafuckin|mothafucking |mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers |nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim |orgasims |orgasm|orgasms |p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses |pissflaps|pissin |pissing|pissoff |poop|porn|porno|pornography|pornos|prick|pricks |pron|pube|pusse|pussi|pussies|pussy|pussys |rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters |shitting|shittings|shitty |skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx\b", "<P>")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
profanity<-paste("\b",paste(readLines(conf),collapse = "|"),"\b",collapse = "")
conf<-file("~/R/Capstone/Required Data/dirty.txt",'r')
profanity<-paste("\b",paste(readLines(conf),collapse = "|"),"\b",collapse = "")
profanity
profanity<-paste0("\\b",paste0(readLines(conf),collapse = "|"),"\\b")
profanity
conf<-file("~/R/Capstone/Required Data/dirty.txt",'r')
profanity<-paste0("\\b",paste0(readLines(conf),collapse = "|"),"\\b")
profanity
gsub("fuckface, fuck face",profanity, ignore.case = T)
gsub("fuckface, fuck face",x = profanity, ignore.case = T)
gsub("fuckface, fuck face",x = profanity, "<P>",ignore.case = T)
?gsub
gsub("fuckface, fuck face",pattern =  = profanity, "<P>",ignore.case = T)
gsub("fuckface, fuck face",pattern = profanity, "<P>",ignore.case = T)
gsub(x ="fuckface, fuck face",pattern = profanity, "<P>",ignore.case = T)
profanity<-paste0("\\<",paste0(readLines(conf),collapse = "|"),"\\>")
gsub(x ="fuckface, fuck face",pattern = profanity, "<P>",ignore.case = T)
profanity<-paste0(" ",paste0(readLines(conf),collapse = "|")," ")
gsub(x ="fuckface, fuck face",pattern = profanity, "<P>",ignore.case = T)
profanity<-paste0(" ",paste0(readLines(conf),collapse = "|")," ")
profanity
conf<-file("~/R/Capstone/Required Data/dirty.txt",'r')
profanity<-paste0("\\b",paste0(readLines(conf),collapse = "|"),"\\b")
profanity
gsub(x ="fuckface, fuck face",pattern = profanity, "<P>",ignore.case = T)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,5,0.05,4)
conf<-file("~/R/Capstone/Required Data/dirty.txt",'r')
# profanity<-paste0("\\b",paste0(readLines(conf),collapse = "|"),"\\b")
profanity<-readLines(conf)
profanity
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T, 5, 0.02,4)
View(results)
main(T, 100, 0.1,4)
View(results)
View(quadrigrams)
View(results)
for(a in 1:100){
readRDS("Test Data/paste0(testsamp_",a,"_",0.1,".RDS" )}
for(a in 1:100){
readRDS(paste0("Test Data/testsamp_",a,"_",0.1,".RDS" ))}
for(a in 1:100){
test.samp<-c(test.samp,readRDS(paste0("Test Data/testsamp_",a,"_",0.1,".RDS" )))}
test.samp<-VCorpus(VectorSource(""))
for(a in 1:100){
test.samp<-c(test.samp,readRDS(paste0("Test Data/testsamp_",a,"_",0.1,".RDS" )))}
test.samp[[1]]$content
test.samp[[2]]$content
b<- stri_split_regex(test.samp[[1]]$content,"<e>\n,<s>")
b<- stri_split_regex(test.samp[[12]]$content,"<e>\n,<s>")
b[1]
b<- stri_split_regex(test.samp[[12]]$content,"<e>\n<s>")
b[1]
length(b)
summary(b)
summary(b)$Length
summary(b)[1,"Length"]
length(b[1])
nchar(b[1])
nchar(b[[1]][1])
length(b[[1]][1])
length[[b]]
length(b[[1]])
class(b)
str(b)
unlist(b)
b<-unlist(b)
b
b(1)
b[1]
b[5235]
str(test.samp)
summary(test.samp)
inspect(test.samp)
test.samp[[1]]<-NULL
inspect(test.samp)
delete<-Vcorpus(NULL)
library("tm", lib.loc="~/R/Capstone/packrat/lib/x86_64-w64-mingw32/3.2.1")
delete<-Vcorpus(NULL)
delete<-Corpus(NULL)
delete<-Corpus(VectorSource(NULL))
delete<-c(delete,test.samp)
rm(delete)
rm(deleteme)
length(b)
a<-unlist(stri_split_regex(test.samp[[1]]$content,"<e>\n<s>"))
c<-lapply(a, function(x){ word.count = stri_count_words(x);
b<- NGramTokenizer(x,
Weka_control(min        = 3,
max        = 3,
delimiters = " "))})  }
c<-lapply(a, function(x){ word.count = stri_count_words(x);
b<- NGramTokenizer(x,
Weka_control(min        = 3,
max        = 3,
delimiters = " "))})
}
c<-lapply(a, function(x){ word.count = stri_count_words(x);
b<- NGramTokenizer(x,
Weka_control(min        = 3,
max        = 3,
delimiters = " "))
perpxty<- sum(lapply(b, function(x) {trigrams[x,pw3_w2w1]}))
list(word.count = word.count,
perplexity = perpxty)})
?lapply
perpxty<- lapply(b, "[" , lapply(b, function(x) {trigrams[x,pw3_w2w1]}))
rm(c)
a[1]
test<-function(x){ word.count = stri_count_words(x);
b<- NGramTokenizer(x,
Weka_control(min        = 3,
max        = 3,
delimiters = " "))
perpxty<-  lapply(b, function(x) {trigrams[x,pw3_w2w1]}))
list(word.count = word.count,
perplexity = perpxty)})}
test<-function(x){ word.count = stri_count_words(x);
b<- NGramTokenizer(x,
Weka_control(min        = 3,
max        = 3,
delimiters = " "));
perpxty<-  lapply(b, function(x) {trigrams[x,pw3_w2w1]})
list(word.count = word.count,
perplexity = perpxty)})}
test<-function(x){ word.count = stri_count_words(x);
b<- NGramTokenizer(x,
Weka_control(min        = 3,
max        = 3,
delimiters = " "));
perpxty<-  lapply(b, function(x) {trigrams[x,pw3_w2w1]})
list(word.count = word.count,
perplexity = perpxty)}
test(a[1])
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
c<-perplexity(test.samp[[1]])
c<-perplexity(3,test.samp[[1]])
c<-perplexity(3,test.samp)
c<-perplexity(3,test.samp)
b
b[1]
b[16]
b[14]
perpxty<-  lapply(b, function(x) {trigrams[x,pw3_w2w1]}),na.rm = TRUE
perpxty<-  lapply(b, function(x) {trigrams[x,pw3_w2w1]})
delimiters = " "));
perpxty<-  sapply(b, function(x) {trigrams[x,pw3_w2w1]})
b
perpxty
perpxty <-  lapply(b, function(x) {trigrams[x,pw3_w2w1]})
perpxty
b
b<- NGramTokenizer(x,
Weka_control(min        = 3,
max        = 3,
delimiters = " "));
rm(perpxty)
rm(b)
rm(a)
perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
perplexity(3,test.samp)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
perplexity(3,test.samp)
b[1]
trigrams[b[1]]
trigrams[b[1],pw3_w2w1]
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
perplexity(3,test.samp)
delete<-perplexity(3,test.samp)
str(sapply)
?sum
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
perpxty <-    function(z) {
trigrams[z,pw3_w2w1]}
tables()
setkey(quadrigrams,wordi)
x<-"the dog sat"
perpxty(x)
View(trigrams)
View(trigrams[count>1])
x<-"thank you for"
perpxty(x)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
delete<-perplexity(3,test.samp)
sum(delete[[1]]$perplexity)
sum(delete[[1]]$perplexity,na.rm = T)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
perpxty
sum(perpxty)
sum(perpxty,na.rm=)
sum(perpxty,na.rm=T)
View(trigrams[count>1,])
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
perplexity(3,test.samp)
delete<-perplexity(3,test.samp)
unlist(delete)
str(unlist(delete))
sum(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
a<-unlist(stri_split_regex(y[[1]]$content,"<e>\n<s>"))
a<-unlist(stri_split_regex(test.sample[[1]]$content,"<e>\n<s>"))
a<-unlist(stri_split_regex(test.samp[[1]]$content,"<e>\n<s>"))
a[12]
a[1]
a[2]
a[3]
lapply(a,length)
lapply(a,char)
lapply(a,nchar)
lapply(a,stri_count_words)[1:50]
stri_extract_first_words("I Love you")
stri_extract_all_words("I Love you",)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
stri_extract_all_words("I",)
stri_extract_all_words("All the KLings' horses")[[1]][1:2]
View(trigrams)
selword<- list("<e>|<s>","<s>" )
trigrams[.(w1,W2)= selword,]
trigrams[.(w1,W2= selword),]
trigrams[.(W1,W2= selword),]
trigrams[.(W1,W2) =.("<e>","<s>"),]
trigrams[.(W1,W2) ==.("<e>","<s>"),]
trigrams[W1 %in% c("<e>","<s>"),]
trigrams[W1 %in% c("<e>","<s>") & W2 == "<s>",]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
perpxty <- trigrams[W1 %in% c("<e>","<s>") & W2 == "<s>" & W3 == b[1],pw3_w2w1]+  # is this a reasonable assumption
trigrams[W1 == "<s>" & W2 == b[1] & W3 == b[2], pw3_w2w1]
b<-c("the","dog")
perpxty <- trigrams[W1 %in% c("<e>","<s>") & W2 == "<s>" & W3 == b[1],pw3_w2w1]+  # is this a reasonable assumption
trigrams[W1 == "<s>" & W2 == b[1] & W3 == b[2], pw3_w2w1]
trigrams[W1 %in% c("<e>","<s>") & W2 == "<s>" & W3 == b[1],pw3_w2w1]
View(trigrams)
trigrams[(W1W2 == "<e>" | W1W2 == "<s>") & W2 == "<s>" & W3 == b[1],pw3_w2w1]
trigrams[(W1W2 == "<e><s>" | W1W2 == "<s><s>")  & W3 == b[1],pw3_w2w1]
trigrams[(W1W2 == "<e><s>"  & W3 == b[1],pw3_w2w1]
trigrams[W1W2 == "<e><s>"  & W3 == b[1],pw3_w2w1]
trigrams[W1W2 == "<e> <s>"  & W3 == b[1],pw3_w2w1]
trigrams[(W1W2 == "<e> <s>" | W1W2 == "<s> <s>")  & W3 == b[1],pw3_w2w1]
trigrams[(W1W2 == "<e> <s>" | W1W2 == "<s> <s>")  & W3 == b[1],sum(pw3_w2w1)]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
paste0("<e> <s> ",b[1])
b<-"the dog"
b<-c("the" "dog")
b<-c("the","dog")
trigrams[paste0("<e> <s> ",b[1])|paste0("<s>",b[1],b[2]),sum(pw3_w2w1)]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
trigrams[paste0("<e> <s> ",b[1])
,]
trigrams[paste0("<s> ",b[1],b[2]),pw3_w2w1]
paste0("<s> ",b[1],b[2])
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
lapply(delete, "[")
lapply(delete, "[")$perplexity
delete[[1]]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
delete
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
View(delete)
View(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
View(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
View(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
View(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
View(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
View(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
View(delete)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
delete<-perplexity(3,test.samp)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
View(results)
main(N,20,0.1, 3)
main(F,20,0.1, 3)
View(trigrams)
main(F,20,0.1, 3)
main(T,20,0.1, 3)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,20,0.1, 3)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,20,0.1, 3)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,20,0.1, 3)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,20,0.1, 3)
test.Corpus <<- VC(VectorSource(NULL))
test.Corpus <<- VCorpus(VectorSource(NULL))
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,20,0.1, 3)
View(results)
main(F,50,0.1, 3)
View(results)
stri_extract_all_words("I am a dog")[[1]]
quadrigrams[.(W1,W2) == stri_extract_all_words("i am a dog")[[1]][1:2],]
stri_extract_all_words("i am a dog")[[1]][1:2]
quadrigrams[.(W1,W2) == c("i","am"),]
quadrigrams[.(W1,W2) == list("i","am"),]
quadrigrams[.(W1,W2) == c("i","am"),]
View(quadrigrams)
quadrigrams[.(W1) == c("i"),]
quadrigrams[W1 == "i",]
quadrigrams[.("W1","W2") == c("i","am"),]
quadrigrams[.("i","am"),]
setkey(quadrigrams,W1,W2,W3)
setkey(quadrigrams,W1W2W3)
quadrigrams["i am a",]
quadrigrams["i am a",by = .EACHI]
quadrigrams["i am a",,by = .EACHI]
quadrigrams["i am a",]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("I am a")
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("I will")
setkey(trigrams, W1W2)
phrase("I will")
setkey(bigrams, W1)
phrase("I")
phrase("The boat")
phrase("The boat docked")
phrase("The boat sank")
head(Capstone)
head("Capstone")
head("~/R/Capstone")
git2r::head("~/R/Capstone")
getwd()
phrase("new york")
phrase("live and I'd")
phrase("live and Id")
phrase("telling me about his")
phrase("me about his")
phrase("arctic monkeys this")
phrase("helps reduce your")
status("~/R/Capstone")
git2r::status("~/R/Capstone")
detach("package:git2r", unload=TRUE)
library("git2r", lib.loc="~/R/Capstone/packrat/lib/x86_64-w64-mingw32/3.2.1")
git2r:status("~/R/Capstone")
git2r:status("Capstone")
status("Capstone")
setwd("..")
getwd()
setwd("Capstone")
status(Capstone)
status("Capstone")
status(".")
status()
references()
hashfile("MakeSample.R")
hashfile("MakeSample.R")
branch_target()
branch_target(master)
branch_target('master')
branch_target(head())
branch_target(head(Capstone))
branch_target(head("Capstone"))
?tempfile
branch_target(head("~/R/Capstone"))
head("~/R/Capstone")
?init
branch_target(head())
head()
repr
repo
Capstone
repo<-repository("~/R/Capstone/")
workdir(repo)
commits(repo)[[1]]
head(repo)
str(head(repo))
summary(head(repo))
summary(head(repo))[[1]][1]
summary(head(repo))[[1]][2]
summary(head(repo))[[2]]
summary(head(repo))[[3]]
summary(head(repo))[[4]]
branch_target(head(repo))
delete<-branch_target(head(repo))
delete[1]
substr(branch_target(head(repo)),1,6)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,5,0.01,4)
View(results)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,5,0.01,4)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,5,0.01,4)
View(results)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(F,5,0.01,4)
View(ngramfreq)
tables()
tables()
tables()
tables()
ngramfreq[2,]
x<-2
ngramfreq[x,]
ngramfreq["2",]
ngramfreq[.("2"),]
ngramfreq[.(2),]
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(F,5,0.01,4)
main(F,5,0.01,4)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(F,5,0.01,4)
View(results)
main(T,100,0.3,4)
