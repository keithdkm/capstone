allblogs[grep(" hell's ",allblogs)]
quadrigrams[wordcount>4,.N]
ngramfreq[wordcount>4,.N]
ngramfreq[wordcount>4,ngram][order(-wordcount)]
ngramfreq[wordcount>4,][order(-wordcount)]
grep("fire brigade",allblogs,ignore.case = T,value = T)
gsub('[<>]+', " ","Hells Fire Brigade: (H) 4 (E) 3 (L) 5 (L) 5.")
tolower(gsub('[<>]+', " ","Hells Fire Brigade: (H) 4 (E) 3 (L) 5 (L) 5."))
gsub('((([0-9]{1,3})(,[0-9]{3})*)|([0-9]+))(.[0-9]+)?',   " <N> ",tolower(gsub('[<>]+', " ","Hells Fire Brigade: (H) 4 (E) 3 (L) 5 (L) 5.")))
a<-gsub('((([0-9]{1,3})(,[0-9]{3})*)|([0-9]+))(.[0-9]+)?',   " <N> ",tolower(gsub('[<>]+', " ","Hells Fire Brigade: (H) 4 (E) 3 (L) 5 (L) 5.")))
a<-gsub('\'',              " \'",a)
a
<-gsub('\'',              " \'","'")
b<-gsub('\'',              " \'","'")
b
a<-gsub( '[.?!]+ ',              " <e> \n <s> ",a)
a
a<-gsub('[\.\?\!]+ ',              " <e> \n <s> ",a)
a<-gsub('[\?\!\.]+ ',              " <e> \n <s> ",a)
a<-gsub('[?!\.]+ ',              " <e> \n <s> ",a)
a<-gsub('[?!.]+ ',              " <e> \n <s> ",a)
a
ngramfreq[count>4,]
a<-gsub('[()\"“”:;,_-]', " ",a)
a
a<-gsub('[^a-zA-Z \n<>\']',         " ",a)
a
a<-gsub([ ][^AaIi\n][ ]',       " ",a)
a<-gsub('[ ][^AaIi\n][ ]',       " ",a)
a
a<-gsub('[ ][ ]+', " ",a)
a
a<-gsub('[ ]^[AaIi\n][ ]',       " ",a)
a
a<-gsub("[ ][^ai\n][ ]",       " ",a)
a
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T,3,0.1,4)
ngramfreq<-readRDS("Results/Interim.RDS")
View(ngramfreq)
ngramfreq[wordcount>4,]
unigrams
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T, 100,0.01,3,95)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(T, 100,0.01,3,95)
View(results)
main(T, 10,0.1,3,95)
View(results)
main(T, 10,0.1,3,95)
View(results)
main(T, 100,0.01,3,95)
View(results)
main(T, 1000,0.001,3,95)
View(results)
View(trigrams)
trigrams_pruned<- trigrams[w %in% vocab,]
View(results)
trigrams[w,]
trigrams["w",]
trigrams[,w]
trigrams_pruned<- trigrams[trigrams[,w] %in% vocab,]
View(trigrams_pruned)
vocab
trigrams_pruned<- trigrams[w %in% vocab$ngram,]
phrase("The cat")
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("The cat")
trigram[uv=="the cat",]
trigrams[uv=="the cat",]
testset<-readRDS("Test Data/100_0.01_2016_01_02_19_28_22/testsamp_1.RDS")
testset
testset[[1]]$content
nchar(testset[[1]]$content)
main(T, 100,0.1,3,95)
trigrams_pruned<- trigrams[w %in% vocab$ngram,]
quadrigrams_pruned<- quadrigrams[x %in% vocab$ngram,]
triigrams[, .N,by = count]
trigrams[, .N,by = count]
View(trigrams[, .N,by = count])
View(trigrams[, .N,by = count][order(-count)])
View(trigrams[, .N,by = count][order(-N)])
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(F,"Sample Data/100_0.1_2016_01_02_20_16_21/" 100,0.1,4,95)
main(F,"Sample Data/100_0.1_2016_01_02_20_16_21/", 100,0.1,4,95)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the cat sat")
phrase("cat sat")
phrase("A case of")
testset[1]
testset[[1]]$content
perpphrase<-testset[[1]]$content
perpphrase[1]
stri_extract_all_words(perpphrase)[[1]][1:3]
phrase("the most varied")
stri_extract_all_words(perpphrase)[[1]][1:4]
paste(stri_extract_all_words(perpphrase)[[1]][2:4])
paste0(stri_extract_all_words(perpphrase)[[1]][2:4])
paste(stri_extract_all_words(perpphrase)[[1]][2:4],sep=" ")
?paste
paste(unlist(stri_extract_all_words(perpphrase)[[1]][2:4]))
paste(unlist(stri_extract_all_words(perpphrase)[[1]][2:4]),collapse = "")
paste(unlist(stri_extract_all_words(perpphrase)[[1]][2:4]),collapse = " ")
paste(stri_extract_all_words(perpphrase)[[1]][2:4],collapse = " ")
quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][2:4],collapse = " "), x]
quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][1:3],collapse = " "), x]
trigrams[uv==paste(stri_extract_all_words(perpphrase)[[1]][3:4],collapse = " "),w]
trigrams[uv==paste(stri_extract_all_words(perpphrase)[[1]][2:3],collapse = " "),w]
trigrams[uv==paste(stri_extract_all_words(perpphrase)[[1]][1:2],collapse = " "),w]
quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][3:5],collapse = " "), x]
for (i in 1:100) quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][i:i+2],collapse = " "), x]
for (i = 1:100) quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][i:i+2],collapse = " "), x]
for (i in 1:100) {quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][i:i+2],collapse = " "), x]}
quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][4:6],collapse = " "), x]
quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][5:7],collapse = " "), x]
quadrigrams[uvw==paste(stri_extract_all_words(perpphrase)[[1]][6:8],collapse = " "), x]
View(bigrams)
bigrams_pruned<-bigrams[v %in% vocab,]
bigrams_pruned<-bigrams[v %in% vocab$ngram,]
View(bigrams_pruned)
View(unigrams)
unigrams<-rbind(unigrams,c(ngram = "<UNK>", probability = -log2(0.05)))
unigrams<-rbind(unigrams,data.table(ngram = "<UNK>", probability = -log2(0.05)))
unigrams<-rbind(unigrams,data.table(ngram = "<UNK>", probability = -log2(0.05)),fill=TRUE)
View(unigrams)
length(stri_extract_all_words(perpphrase))
stri_extract_all_words(perpphrase)
length(stri_extract_all_words(perpphrase)[[1]])
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(perpphrase)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(perpphrase)
testlist<-stri_extract_all_words(teststring)[[1]]
testlist<-stri_extract_all_words(perptest)[[1]]
testlist<-stri_extract_all_words(perpphrase)[[1]]
for (i in 1:length(testlist)) paste(testlist[i:i+2],collapse = " ")
i<-1
paste(testlist[i:i+2],collapse = " ")
paste(testlist[i:(i+2)],collapse = " ")
for (i in 1:length(testlist)) paste(testlist[i:(i+2)],collapse = " ")
a<-for (i in 1:length(testlist)) paste(testlist[i:(i+2)],collapse = " ")
a<-for (i in 1:length(testlist)) print(paste(testlist[i:(i+2)],collapse = " "))
for (i in 1:length(testlist)) print(phrase(paste(testlist[i:(i+2)],collapse = " ")))
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
for (i in 1:(length(testlist)/2)) print(paste(i," ",phrase(paste(testlist[i:(i+2)],collapse = " "),1)))
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
for (i in 1:(length(testlist)/2)) print(paste(i," ",phrase(paste(testlist[i:(i+2)],collapse = " "),1)))
phrase("the cat sat")
phrase("the cat sat",1)
View(quadrigrams)
phrase("home you eat")
phrase("home you eat",1)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("home you eat",1)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("home you eat",1)
phrase("home you eat",2)
for (i in 1:(length(testlist)/2)) print(paste(i," ",phrase(paste(testlist[i:(i+2)],collapse = " "),1)))
for (i in 1:length(testlist)) print(phrase(paste(testlist[i:i+2],collapse = " ") == testlist[i+3])
)
for (i in 1:length(testlist)) print(phrase(paste(testlist[i:i+2],collapse = " ")) == testlist[i+3])
for (i in 1:length(testlist)) print(phrase(paste(testlist[i:i+2],collapse = " "),1) == testlist[i+3])
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(perpphrase)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(perpphrase)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(perpphrase)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(perpphrase)
testset[[1]]$content
accuracy(readRDS("Test Data/100_0.1_2016_01_02_20_16_21/testsamp_2.RDS")[[1]]$content)
readRDS("Test Data/100_0.1_2016_01_02_20_16_21/testsamp_2.RDS")
a<-readRDS("Test Data/100_0.1_2016_01_02_20_16_21/testsamp_2.RDS")[[1]]$content
accuracy(a)
a<-readRDS("Test Data/100_0.1_2016_01_02_20_16_21/testsamp_3.RDS")[[1]]$content
accuracy(a)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(3)
View(results)
accuracy(1)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
testlist
testlist[1]
testlist[2]
testlist[[1]]
testlist
testlist[[1]]
testlist[[1]][1]
testlist[[1]]$
started.at = proc.time()
for (j in 1:(length(testlist)-3))
if (phrase(paste(testlist[j:j+2],collapse = " "),1) == testlist[j+3]) correct<-correct+1
acc_time<-timetaken(started.at)
print(paste("Sample ",i," ", length(testlist), paste(round(correct/(length(testlist)-3)*100,1),"%",sep = ""),  acc_time," secs"))
accuracy(1)
}
}
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
testlist
str(test.list)
str(testlist)
testlist[1]
quadrigrams_pruned<-quadrigrams[x %in% vocab$ngram]
object.size(quadrigrams)
object.size(quadrigrams_pruned)
bigrams_pruned["1",]
bigrams_pruned[,mult=first]
bigrams_pruned[,mult="first"]
bigrams_pruned[order(u),mult="first"]
bigrams_pruned[order(u),mult="first"][1:30]
bigrams_pruned[order(u,pv_u),mult="first"][1:30]
bigrams_pruned[order(u,pv_u),mult="first",by = u]
bigrams_pruned[order(u,pv_u),j=.SD,mult="first",by = u]
bigrams_pruned[min(pv_u),j=.SD,mult="first",by = u]
bigrams_pruned[min(pv_u),j=.SD,by = u]
bigrams_pruned[,j=.SD,by = u]
bigrams_pruned[,j=.SD,by = u][min(pv_u),]
?min
min(bigrams)
min(bigrams[,pv_u])
bigrams_pruned[pv_u==min(pv_u),j=.SD,by = u]
log2(1)
View(unigrams)
unigrams["aaaaaaaaa",]
unigrams[ngram=="aaaaaaaaa",]
bigrams[pv_u==0,.N]
bigrams[pv_u==0,u][u %in% vocab,.N]
bigrams[pv_u==0,"u"][u %in% vocab,.N]
bigrams[pv_u==0,"u"][u %in% vocab$ngram,.N]
bigrams[pv_u==0,"u"]
bigrams[pv_u==0,u]
bigrams[pv_u==0,u][1:10]
class(bigrams[pv_u==0,u][1:10])
str(bigrams[pv_u==0,u][1:10])
str(bigrams[pv_u==0,.(u)][1:10])
bigrams[pv_u==0,.(u)][1:10]
bigrams[pv_u==0,.(u)][u %in% vocab$ngram,.N]
bigrams[pv_u==0,.(u)][u %in% vocab$ngram,]
main(T ,"",num.sample = 250,sz.sample = 0.1,4,coverage = 95)
main(F,"Sample Data/250_0.1_2016_01_03_01_02_11/",250,0.1,4,95)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
main(F,"Sample Data/250_0.1_2016_01_03_01_02_11/",250,0.1,4,95)
accuracy(1)
View(results)
c(4,5)
d<-c(4,5)
d+4
d<-c(d,5)
d
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
View(acc_test_results)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
testlist[j:(j+2)]
paste(testlist[j:j+2],collapse = " ")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
View(acc_test_results)
sum(acc_test_results$Correct)
acc_test_results$Correct
acc_test_results[4]
acc_test_results[,4]
sum(acc_test_results[,4])
count(acc_test_results[,4])
count(acc_test_results[,4])$TRUE
count(acc_test_results[,4])[2]
count(acc_test_results[,4])[2,]
count(acc_test_results[,4])[2,2]
count(acc_test_results[,4])[2,2]/7298
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(1)
View(acc_test_results)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
help("timetaken")
strptime("01:10:20")
strptime("01:10:20", format="HH:MM:SS")
strptime("01:10:20", format="hh:mm:ss")
strptime("01:10:20", format="%h:%m:%s")
strptime("01:10:20", format="%H:%M:%S")
?as.difftime
as.diffyime("01:20:10",  format="%H:%M:%S")
as.difftime("01:20:10",  format="%H:%M:%S")
as.difftime("01:20:10",  format="%H:%M:%S")/60
as.difftime("01:20:10",  format="%H:%M:%S",units = "secs")/10
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
(z <- as.difftime(c(0,30,60), units = "mins"))
as.numeric(z, units = "secs")
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
paste(count(actual_words==pred_words)[2,2]/(testlength*100),1),"%",sep = "")
paste(count(actual_words==pred_words)[2,2]/(testlength*100),1),"%",sep = ""),
as.numeric(as.difftime(acc_time,  format="%H:%M:%S",units = "secs"))/testlength,
" seconds per prediction" )
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
count(actual_words==pred_words)[2,2]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
accuracy(2)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
accuracy(2)
as.numeric(as.difftime(acc_time,  format="%H:%M:%S",units = "secs"))
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("a case of", "Backoff")
phrase("a case of", n = 1,"Backoff")
phrase("a case of", n = 3,"Backoff")
phrase("a case of", n = 5,"Backoff")
phrase("would mean the", n = 5,"Backoff")
phrase("make me the", n = 5,"Backoff")
phrase("struggling but the", n = 5,"Backoff")
phrase("date at the", n = 5,"Backoff")
phrase("be on my", n = 5,"Backoff")
phrase(" in quite some", n = 5,"Backoff")
phrase(" with his little", n = 5,"Backoff")
phrase("faith during the", n = 5,"Backoff")
phrase(" you must be", n = 5,"Backoff")
phrase("you must be", n = 5,"Backoff")
phrase("and I d", n = 5,"Backoff")
phrase("about his", n = 5,"Backoff")
phrase("me about his", n = 5,"Backoff")
phrase("arctic monkeys this", n = 5,"Backoff")
phrase("helps reduce your", n = 5,"Backoff")
phrase("to take a", n = 5,"Backoff")
phrase("groceries in each", n = 5,"Backoff")
phrase("bottom to the", n = 5,"Backoff")
phrase("bruises from playing", n = 5,"Backoff")
phrase("Adam Sandler s", n = 5,"Backoff")
phrase("Adam Sandlers", n = 5,"Backoff")
phrase("of Adam Sandlers", n = 5,"Backoff")
phrase("of Adam Sandler", n = 5,"Backoff")
tags<-["<n>","<p>"]
tags<-c("<n>","<p>")
bigrams[v %in% tags,.N]
trigrams[w %in% tags,.N]
quadrigrams[w %in% tags,.N]
bigrams[-(v %in% tags),.N]
bigrams[v !%in% tags,.N]
bigrams[v !!%in% tags,.N]
bigrams[v %in% -tags,.N]
bigrams[v %in% tags,]
ngramfreq<-readRDS("Results/Interim.RDS")
rm(ngramfreq)
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
prune(4)
View(quadrigrams)
trigrams[,.N]
prune(3)
trigrams[,.N]
bigrams[,.N]
prune(2)
bigrams[,.N]
accuracy(2)
gc()
trigram["the cat sat",]
trigrams["the cat sat",]
bigrams["the cat",]
bigrams[ngram=="the cat",]
trigrams[ngram=="the cat sat",]
bigrams[ngram=="cat sat",]
unigrams[ngram=="cat sat",]
unigrams[ngram=="cat",]
unigrams[ngram=="cat",2^-probability]
2^-14
View(acc_test_results)
2^-13.55
unigrams[,sum(2^-probability)]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
View(unigrams)
unigrams <<- rbind(unigrams[,Mean.Probability := count/sum(count)][,Cum.Probability:=cumsum(Mean.Probability)][Cum.Probability<=(coverage/100),][order(ngram),],
data.table(ngram = "UNK", probability = -log2(0.05)),fill = T )
unigrams <<- rbind(unigrams,
data.table(ngram = "UNK", probability = -log2(0.05)),fill = T )
unigrams[ngram =="<UNK>",]
unigrams[ngram =="UNK",]
unigrams[ngram =="UNK",.SD :=NULL]
unigrams<-unigrams[ngram <>"UNK",]
unigrams<-unigrams[ngram !="UNK",]
unigrams[ngram =="UNK",]
unigrams <<- rbind(unigrams,
data.table(ngram = "<UNK>", count = total_count - sum(count), probability = -log2(0.05)),fill = T )
total_count<-unigrams[,sum(count)]
unigrams <<- rbind(unigrams,
data.table(ngram = "<UNK>", count = total_count - sum(count), probability = -log2(0.05)),fill = T )
unigrams <<- rbind(unigrams,
data.table(ngram = "<UNK>", count = total_count - unigrams[,sum(count)], probability = -log2(0.05)),fill = T )
unigrams[ngram =="<UNK>",]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
rm(unigrams)
make.ngrams(path = "Sample Data/250_0.1_2016_01_03_01_02_11/",1,1,250,0.1)
vocabulary(coverage = 95)
unigrams[,sum(2^-probability)]
unigrams[ngram=="<UNK>",]
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat")
phrase("the man sat",3,"Backoff")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
View(target)
phrase("the man sat",3,"Backoff")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
View(target)
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
View(target)
phrase("the man sat",3,"Backoff")
stri_extract_all_words("the dog sat")
stri_extract_all_words("the dog sat")[[1]]
stri_extract_all_words("the dog sat")[[1]][1]
stri_extract_all_words("the dog sat")[[1]][1:3]
phrase("the man sat",3,"Backoff")
Q
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
debugSource('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
phrase("the man sat",3,"Backoff")
phrase("the man sat",3,"Backoff")
phrase("the man sat",3,"Backoff")
Q
phrase("the man sat",3,"Backoff")
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
phrase("the man sat",3,"Backoff")
View(quadrigrams)
quadrigrams <<- ngramfreq[.(4), .(count = sum(count)) , by = .(ngram)][, c("u", "v","w","x") := tstrsplit(ngram, " ", fixed = TRUE)]
quadrigrams[,c("u","v","w", "x") :=  lapply(.(u,v,w,x), function(x) ifelse (!(x %in% unigrams[,ngram]), "<UNK>", x))][,uvw:=paste0(u," ",v," ",w)]
quadrigrams[u=="<UNK>" | v=="<UNK>" | w == "<UNK> "| x == "<UNK>",count:=sum(count), by = .(u, v, w, x)]
setkey(quadrigrams,u,v,w,x)
quadrigrams<<-unique (quadrigrams)
setkey(quadrigrams,ngram)
quadrigrams[,px_uvw := -log2(count/ trigrams[.(quadrigrams$u,quadrigrams$v,quadrigrams$w), count])]}
# quadrigrams[,p4_wvu := log10(count)]
if (max.ng > 1)   setkey(bigrams,u)
if (max.ng > 2)   setkey(trigrams,u,v)
if (max.ng > 3)   setkey(quadrigrams,u,v,w)
ngram.time<<-timetaken(started.at)
cat("Finished ",n,"samples in ",timetaken(started.at),"\n")
#save the entire ngramfrq table for use in the Interim report
saveRDS(ngramfreq,"Results/Interim.RDS")
ngramfreq<-readRDS("Results/Interim.RDS")
?readRDS
getwd()
ngramfreq<-readRDS("/Results/Interim.RDS")
ngramfreq<-readRDS("Results/Interim.RDS")
source('~/R/Capstone/MakeSample.R', encoding = 'UTF-8')
